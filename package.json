{
  "name": "noveldrive",
  "version": "0.1.0",
  "description": "A two-layer creative writing platform with serendipitous knowledge management",
  "main": "dist/main/main/index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:main\" \"npm run dev:renderer\" \"npm run dev:electron\"",
    "dev:electron": "wait-on http://localhost:3003 && electron .",
    "dev:main": "tsc -w -p tsconfig.main.dev.json",
    "dev:renderer": "vite",
    "build": "npm run build:main && npm run build:renderer && electron-builder",
    "build:main": "tsc -p tsconfig.main.json",
    "build:renderer": "vite build",
    "start": "electron .",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "typecheck": "tsc --noEmit",
    "test:db": "tsx src/main/commands/test-database.ts",
    "test:vss": "tsx src/main/commands/test-vss.ts",
    "test:search": "tsx src/main/commands/test-search.ts",
    "test:local-embedding": "tsx src/main/commands/test-local-embedding.ts",
    "test:agents": "tsx src/main/commands/test-multi-agent-discussion.ts",
    "test:summarization": "tsx src/main/commands/test-summarization.ts",
    "test:anything-box": "tsx src/main/commands/test-anything-box.ts",
    "db:migrate": "tsx src/main/commands/migrate-database.ts",
    "db:migrate:electron": "electron src/main/commands/migrate-database-electron.js",
    "db:seed": "tsx src/main/commands/seed-database.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headless": "playwright test --reporter=github",
    "test:e2e:ui": "playwright test --ui",
    "postinstall": "electron-rebuild",
    "rebuild": "electron-rebuild -f -w better-sqlite3",
    "setup:duckdb": "node scripts/setup-duckdb.js",
    "clean:install": "rm -rf node_modules package-lock.json && npm cache clean --force && npm install && npm run setup:duckdb"
  },
  "keywords": [
    "electron",
    "writing",
    "ai",
    "creative"
  ],
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "@electron/rebuild": "^4.0.1",
    "@playwright/test": "^1.53.1",
    "@rollup/rollup-win32-x64-msvc": "^4.44.0",
    "@types/better-sqlite3": "^7.6.13",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.19.1",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.2.18",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "@typescript-eslint/parser": "^6.19.0",
    "@vitejs/plugin-react": "^4.2.1",
    "autoprefixer": "^10.4.17",
    "concurrently": "^8.2.2",
    "electron": "^37.2.0",
    "electron-builder": "^24.9.1",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "gpt-tokenizer": "^3.0.1",
    "jest": "^30.0.2",
    "playwright": "^1.53.1",
    "postcss": "^8.4.33",
    "prettier": "^3.2.4",
    "sucrase": "^3.35.0",
    "tailwindcss": "^3.4.1",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.3",
    "typescript": "^5.3.3",
    "vite": "^5.0.11",
    "vite-plugin-electron": "^0.15.5",
    "vite-plugin-electron-renderer": "^0.14.5",
    "wait-on": "^8.0.3"
  },
  "dependencies": {
    "@xenova/transformers": "^2.17.2",
    "better-sqlite3": "^12.2.0",
    "date-fns": "^4.1.0",
    "dotenv": "^16.3.1",
    "framer-motion": "^12.18.1",
    "openai": "^4.24.7",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "reactflow": "^11.11.4",
    "tiny-segmenter": "^0.2.0",
    "uuid": "^9.0.1"
  },
  "build": {
    "appId": "com.noveldrive.app",
    "productName": "NovelDrive",
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*",
      "public/**/*"
    ],
    "mac": {
      "category": "public.app-category.productivity"
    },
    "win": {
      "target": "nsis"
    },
    "linux": {
      "target": "AppImage"
    }
  }
}
